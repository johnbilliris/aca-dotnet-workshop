# Upgrade Azure CLI
az upgrade
# Login to Azure
az login 
# Only required if you have multiple subscriptions
az account set --subscription 2e20e6b8-e24f-4d7a-ad5c-bfdde4b8708f
# Install/Upgrade Azure Container Apps Extension
az extension add --name containerapp --upgrade


$RESOURCE_GROUP="tasks-tracker-rg"
$LOCATION="eastus"
$ENVIRONMENT="tasks-tracker-containerapps-env"
$WORKSPACE_NAME="law-eaus-taskstracker"
$APPINSIGHTS_NAME="appinsights-eaus-taskstracker"
$BACKEND_API_NAME="tasksmanager-backend-api"
$ACR_NAME="acreaustaskstracker"

az group create --name $RESOURCE_GROUP --location "$LOCATION"
az acr create --resource-group $RESOURCE_GROUP --name $ACR_NAME --sku Basic --admin-enabled true

# create the log analytics workspace
az monitor log-analytics workspace create --resource-group $RESOURCE_GROUP --workspace-name $WORKSPACE_NAME

# retrieve workspace ID
$WORKSPACE_ID=az monitor log-analytics workspace show --query customerId -g $RESOURCE_GROUP -n $WORKSPACE_NAME -o tsv

# retrieve workspace secret
$WORKSPACE_SECRET=az monitor log-analytics workspace get-shared-keys --query primarySharedKey -g $RESOURCE_GROUP -n $WORKSPACE_NAME -o tsv

# Install the application-insights extension for the CLI
az extension add -n application-insights

# Create application-insights instance
az monitor app-insights component create -g $RESOURCE_GROUP -l $LOCATION --app $APPINSIGHTS_NAME --workspace $WORKSPACE_NAME

# Get Application Insights Instrumentation Key
$APPINSIGHTS_INSTRUMENTATIONKEY=($(az monitor app-insights component show --app $APPINSIGHTS_NAME -g $RESOURCE_GROUP)  | ConvertFrom-Json).instrumentationKey

# Create the ACA environment
az containerapp env create --name $ENVIRONMENT --resource-group $RESOURCE_GROUP --logs-workspace-id $WORKSPACE_ID --logs-workspace-key $WORKSPACE_SECRET --dapr-instrumentation-key $APPINSIGHTS_INSTRUMENTATIONKEY --location $LOCATION



# CD to root directory of the project
az acr build --registry $ACR_NAME --image "tasksmanager/$BACKEND_API_NAME" --file 'TasksTracker.TasksManager.Backend.Api/Dockerfile' .


az containerapp create `
    --name $BACKEND_API_NAME  `
    --resource-group $RESOURCE_GROUP `
    --environment $ENVIRONMENT `
    --image "$ACR_NAME.azurecr.io/tasksmanager/$BACKEND_API_NAME" `
    --registry-server "$ACR_NAME.azurecr.io" `
    --target-port 80 `
    --ingress 'external' `
    --min-replicas 1 `
    --max-replicas 1 `
    --cpu 0.25 --memory 0.5Gi `
    --query configuration.ingress.fqdn


